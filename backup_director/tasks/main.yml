- name: Deploy the backup director role
  become: yes
  block:

    # BUG: ERROR 1044 and 1064 messages on creation of Bacula MySQL tables
    # When we test this role using the Docker container approach defined in the
    # varilink/services-docker repository, at the point of creation of the
    # Bacula MySQL tables errors 1044 and 1064 are reported. However the
    # creation of the tables succeeds. Note that the creation of the Bacula
    # MySQL tables does not happen at the point of package installation in the
    # containers, whereas it does for a server install. Again, see the
    # varilink/services-docker repository and observe whether this same bug is
    # present for a server install or not.
    - name: Install apt package(s) required by the backup director role
      apt:
        name:
          - bacula-director
          - bacula-director-mysql
        install_recommends: no

    - name: Template bacula-dir.conf
      template:
        src: bacula-dir.conf.j2
        dest: /etc/bacula/bacula-dir.conf
        owner: root
        group: bacula
        mode: 0640
      vars:
        # Every host in the inventory is backed up. For brevity, define variable
        # for this query as it is referenced three times in the template file.
        hostnames: "{{ query('inventory_hostnames', 'all') }}"

    - name: Create folders to hold filesets for clients and roles
      file:
        path: /etc/bacula/inc/{{ item }}-fs
        state: directory
        owner: root
        group: bacula
        mode: 0750
      loop:
        - client
        - role

    - name: Template client specific filesets to filesets
      template:
        src: bacula-client-fileset.j2
        dest: /etc/bacula/inc/client-fs/{{ hostname }}.conf
        owner: root
        group: bacula
        mode: 0640
      loop: "{{ query('inventory_hostnames', 'all') }}"
      loop_control:
        loop_var: hostname
      vars:
        # Load the contents of deploy.yml into the variable "rolemaps"
        rolemaps: "{{ lookup('file', playbook_dir + '/deploy.yml') | from_yaml }}"

    - debug:
        var: role_path

    - name: Copy role snippets for inclusion in client specific filesets
      copy:
        src: "{{ role_path + '/../' + item.path }}"
        dest: "{{ '/etc/bacula/inc/role-fs/' + item.path|regex_search('^[\\w-]+') + '.conf' }}"
      # if files/bacula-fileset is in a role capture its path relative to roles
      when: item.path is regex('[\w-]+/files/bacula-fileset.conf')
      # recursively match all files roles folder
      with_filetree: "{{ role_path }}/.."
      loop_control:
        label: "{{ item.path }}"

    - name: Deploy additional bacula helper scripts
      copy:
        src: files/{{ item }}
        dest: /etc/bacula/scripts/
        owner: bacula
        group: bacula
        mode: u=rwx,g=rx,o=rx
      loop:
        - dropbox-status.sh
        - start-dropbox.sh
        - stop-dropbox.sh

    - name: Install and setup Dropbox for backup use
      include_role:
        name: backup_dropbox
