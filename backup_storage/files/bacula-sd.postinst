#!/bin/sh

set -e

PKG_NAME="bacula-sd"
TEMPLATE="/usr/share/bacula-common/defconfig/$PKG_NAME.conf"
TARGET="/etc/bacula/$PKG_NAME.conf"

case "$1" in
    configure)
	. /usr/share/bacula-common/common-functions.dpkg
	readOrCreatePasswords
	setup_etc_default $PKG_NAME $@

	# create new bacula-sd.conf using the template
	TMP_CONFIG="$(mktemp -p /tmp $PKG_NAME.conf.ucftmp-XXXXXXXXXX)"

	sed -e s~@debian_basename@~`hostname`~ \
	    -e s~XXX_SDPASSWORD_XXX~$SDPASSWD~ \
	    -e s~XXX_MONSDPASSWORD_XXX~$SDMPASSWD~ \
	    $TEMPLATE > $TMP_CONFIG
	chmod 640 $TMP_CONFIG
	chown bacula:bacula $TMP_CONFIG
	# let ucf handle the conffile and register it
	ucf --debconf-ok --three-way $TMP_CONFIG $TARGET
	ucfr $PKG_NAME $TARGET
	rm -f $TMP_CONFIG

	# for upgrades from older versions, make sure the config file
	# is owned by the user bacula
	if [ -f $TARGET ] && dpkg --compare-versions "$2" lt "7.4.4+dfsg-1"; then
	    chown bacula $TARGET
        fi
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdeb/12.1.1
dpkg-maintscript-helper dir_to_symlink /usr/share/doc/bacula-sd bacula-common 7.0.5\+dfsg-4\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/bacula/scripts/dvd-handler 9.0.3\+dfsg-1\~ -- "$@"
# End automatically added section
# Automatically added by dh_installinit/12.1.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/bacula-sd" ]; then
		update-rc.d bacula-sd defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d --skip-systemd-native bacula-sd $_dh_action || exit 1
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/12.1.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'bacula-sd.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'bacula-sd.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'bacula-sd.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'bacula-sd.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/12.1.1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'bacula-sd.service' >/dev/null || true
	fi
fi
# End automatically added section


exit 0
